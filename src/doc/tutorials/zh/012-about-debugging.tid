title: $:/plugins/Modern.TiddlyDev/doc/tutorials/zh/012-about-debugging
caption: 关于调试
authors: whitefall
type: text/vnd.tiddlywiki

!! Q：如何友好的调试呢？我一般比较喜欢用求值的思维玩，根据求得的结果，看看他是什么，在进行下一步，然后一步步实现它。


A：多用控制台：
* 使用浏览器的开发者工具，按 F12 键或者在浏览器菜单中选择“更多工具”>“开发者工具”
* 开发者工具会有一个 控制台 标签，打开会有一个聊天框一样的界面。最下方输入js代码可以执行。你输入$tw看看，该有的都有了
* 但需要注意的是，你平时写widget的那个环境是沙盒并非浏览器环境（你可以理解成有些全局变量你拿不到，或者有些变量只有里面才能拿到），这个要注意。


A：使用debugger调试语句。

!! Q：如何写测试呢？

你可以在 `wiki/tiddlers/tests` 文件夹里写测试，也可以在插件里写，只要 meta 文件里包含这些即可：

```tid
type: application/javascript
tags: $:/tags/test-spec
```

`$:/tags/test-spec` 标签会将这个条目标记为测试，并在你执行 `pnpm run test` 的时候被执行。

注意在 `wiki/tiddlers/tests` 文件夹里写测试只能用 JS；在插件里写测试可以用 TS 但是测试会被打包进插件，增大插件体积。

!! 常见问题

!!! 启动时报错 `ReferenceError: Element is not defined`

这是因为你使用的某个库只支持浏览器端渲染，你需要确保使用它的逻辑只在浏览器端运行。

可以参考白板插件的做法：

# 将微件的类型改成 `module-type: library` [[源码|https://github.com/tiddly-gittly/tiddlywiki-whiteboard/blob/master/src/tw-whiteboard/widget.ts.meta]]
# 写一个加载器，类型是微件 `module-type: widget`，在判断是浏览器环境时再加载插件 [[源码|https://github.com/tiddly-gittly/tiddlywiki-whiteboard/blob/master/src/tw-whiteboard/widget-loader.js]]